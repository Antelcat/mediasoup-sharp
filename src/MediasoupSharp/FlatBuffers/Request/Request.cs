// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using System;
using System.Text.Json.Serialization;
using FlatBuffers.Consumer;
using FlatBuffers.DataConsumer;
using FlatBuffers.PlainTransport;
using FlatBuffers.Router;
using FlatBuffers.RtpObserver;
using FlatBuffers.Transport;
using FlatBuffers.Worker;
using Google.FlatBuffers;
using EnableTraceEventRequest = FlatBuffers.Transport.EnableTraceEventRequest;

namespace FlatBuffers.Request
{
    public struct Request : IFlatbufferObject
    {
        private Table __p;
        public ByteBuffer ByteBuffer { get { return __p.bb; } }
        public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
        public static Request GetRootAsRequest(ByteBuffer _bb) { return GetRootAsRequest(_bb, new Request()); }
        public static Request GetRootAsRequest(ByteBuffer _bb, Request obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
        public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
        public Request __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

        public uint Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
        public Method Method { get { int o = __p.__offset(6); return o != 0 ? (Method)__p.bb.Get(o + __p.bb_pos) : Method.WORKER_CLOSE; } }
        public string HandlerId { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetHandlerIdBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
        public ArraySegment<byte>? GetHandlerIdBytes() { return __p.__vector_as_arraysegment(8); }
#endif
        public byte[] GetHandlerIdArray() { return __p.__vector_as_array<byte>(8); }
        public Body BodyType { get { int o = __p.__offset(10); return o != 0 ? (Body)__p.bb.Get(o + __p.bb_pos) : FlatBuffers.Request.Body.NONE; } }
        public TTable? Body<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(12); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
        public UpdateSettingsRequest BodyAsWorker_UpdateSettingsRequest() { return Body<UpdateSettingsRequest>().Value; }
        public CreateWebRtcServerRequest BodyAsWorker_CreateWebRtcServerRequest() { return Body<CreateWebRtcServerRequest>().Value; }
        public CloseWebRtcServerRequest BodyAsWorker_CloseWebRtcServerRequest() { return Body<CloseWebRtcServerRequest>().Value; }
        public CreateRouterRequest BodyAsWorker_CreateRouterRequest() { return Body<CreateRouterRequest>().Value; }
        public CloseRouterRequest BodyAsWorker_CloseRouterRequest() { return Body<CloseRouterRequest>().Value; }
        public CreateWebRtcTransportRequest BodyAsRouter_CreateWebRtcTransportRequest() { return Body<CreateWebRtcTransportRequest>().Value; }
        public CreatePlainTransportRequest BodyAsRouter_CreatePlainTransportRequest() { return Body<CreatePlainTransportRequest>().Value; }
        public CreatePipeTransportRequest BodyAsRouter_CreatePipeTransportRequest() { return Body<CreatePipeTransportRequest>().Value; }
        public CreateDirectTransportRequest BodyAsRouter_CreateDirectTransportRequest() { return Body<CreateDirectTransportRequest>().Value; }
        public CreateActiveSpeakerObserverRequest BodyAsRouter_CreateActiveSpeakerObserverRequest() { return Body<CreateActiveSpeakerObserverRequest>().Value; }
        public CreateAudioLevelObserverRequest BodyAsRouter_CreateAudioLevelObserverRequest() { return Body<CreateAudioLevelObserverRequest>().Value; }
        public CloseTransportRequest BodyAsRouter_CloseTransportRequest() { return Body<CloseTransportRequest>().Value; }
        public CloseRtpObserverRequest BodyAsRouter_CloseRtpObserverRequest() { return Body<CloseRtpObserverRequest>().Value; }
        public SetMaxIncomingBitrateRequest BodyAsTransport_SetMaxIncomingBitrateRequest() { return Body<SetMaxIncomingBitrateRequest>().Value; }
        public SetMaxOutgoingBitrateRequest BodyAsTransport_SetMaxOutgoingBitrateRequest() { return Body<SetMaxOutgoingBitrateRequest>().Value; }
        public SetMinOutgoingBitrateRequest BodyAsTransport_SetMinOutgoingBitrateRequest() { return Body<SetMinOutgoingBitrateRequest>().Value; }
        public ProduceRequest BodyAsTransport_ProduceRequest() { return Body<ProduceRequest>().Value; }
        public ConsumeRequest BodyAsTransport_ConsumeRequest() { return Body<ConsumeRequest>().Value; }
        public ProduceDataRequest BodyAsTransport_ProduceDataRequest() { return Body<ProduceDataRequest>().Value; }
        public ConsumeDataRequest BodyAsTransport_ConsumeDataRequest() { return Body<ConsumeDataRequest>().Value; }
        public EnableTraceEventRequest BodyAsTransport_EnableTraceEventRequest() { return Body<EnableTraceEventRequest>().Value; }
        public CloseProducerRequest BodyAsTransport_CloseProducerRequest() { return Body<CloseProducerRequest>().Value; }
        public CloseConsumerRequest BodyAsTransport_CloseConsumerRequest() { return Body<CloseConsumerRequest>().Value; }
        public CloseDataProducerRequest BodyAsTransport_CloseDataProducerRequest() { return Body<CloseDataProducerRequest>().Value; }
        public CloseDataConsumerRequest BodyAsTransport_CloseDataConsumerRequest() { return Body<CloseDataConsumerRequest>().Value; }
        public ConnectRequest BodyAsPlainTransport_ConnectRequest() { return Body<ConnectRequest>().Value; }
        public PipeTransport.ConnectRequest BodyAsPipeTransport_ConnectRequest() { return Body<PipeTransport.ConnectRequest>().Value; }
        public WebRtcTransport.ConnectRequest BodyAsWebRtcTransport_ConnectRequest() { return Body<WebRtcTransport.ConnectRequest>().Value; }
        public Producer.EnableTraceEventRequest BodyAsProducer_EnableTraceEventRequest() { return Body<Producer.EnableTraceEventRequest>().Value; }
        public SetPreferredLayersRequest BodyAsConsumer_SetPreferredLayersRequest() { return Body<SetPreferredLayersRequest>().Value; }
        public SetPriorityRequest BodyAsConsumer_SetPriorityRequest() { return Body<SetPriorityRequest>().Value; }
        public Consumer.EnableTraceEventRequest BodyAsConsumer_EnableTraceEventRequest() { return Body<Consumer.EnableTraceEventRequest>().Value; }
        public SetBufferedAmountLowThresholdRequest BodyAsDataConsumer_SetBufferedAmountLowThresholdRequest() { return Body<SetBufferedAmountLowThresholdRequest>().Value; }
        public SendRequest BodyAsDataConsumer_SendRequest() { return Body<SendRequest>().Value; }
        public SetSubchannelsRequest BodyAsDataConsumer_SetSubchannelsRequest() { return Body<SetSubchannelsRequest>().Value; }
        public AddSubchannelRequest BodyAsDataConsumer_AddSubchannelRequest() { return Body<AddSubchannelRequest>().Value; }
        public RemoveSubchannelRequest BodyAsDataConsumer_RemoveSubchannelRequest() { return Body<RemoveSubchannelRequest>().Value; }
        public AddProducerRequest BodyAsRtpObserver_AddProducerRequest() { return Body<AddProducerRequest>().Value; }
        public RemoveProducerRequest BodyAsRtpObserver_RemoveProducerRequest() { return Body<RemoveProducerRequest>().Value; }

        public static Offset<Request> CreateRequest(FlatBufferBuilder builder,
                                                    uint id = 0,
                                                    Method method = Method.WORKER_CLOSE,
                                                    StringOffset handler_idOffset = default(StringOffset),
                                                    Body body_type = FlatBuffers.Request.Body.NONE,
                                                    int bodyOffset = 0)
        {
            builder.StartTable(5);
            Request.AddBody(builder, bodyOffset);
            Request.AddHandlerId(builder, handler_idOffset);
            Request.AddId(builder, id);
            Request.AddBodyType(builder, body_type);
            Request.AddMethod(builder, method);
            return Request.EndRequest(builder);
        }

        public static void StartRequest(FlatBufferBuilder builder) { builder.StartTable(5); }
        public static void AddId(FlatBufferBuilder builder, uint id) { builder.AddUint(0, id, 0); }
        public static void AddMethod(FlatBufferBuilder builder, Method method) { builder.AddByte(1, (byte)method, 0); }
        public static void AddHandlerId(FlatBufferBuilder builder, StringOffset handlerIdOffset) { builder.AddOffset(2, handlerIdOffset.Value, 0); }
        public static void AddBodyType(FlatBufferBuilder builder, Body bodyType) { builder.AddByte(3, (byte)bodyType, 0); }
        public static void AddBody(FlatBufferBuilder builder, int bodyOffset) { builder.AddOffset(4, bodyOffset, 0); }
        public static Offset<Request> EndRequest(FlatBufferBuilder builder)
        {
            int o = builder.EndTable();
            builder.Required(o, 8);  // handler_id
            return new Offset<Request>(o);
        }
        public static void FinishRequestBuffer(FlatBufferBuilder builder, Offset<Request> offset) { builder.Finish(offset.Value); }
        public static void FinishSizePrefixedRequestBuffer(FlatBufferBuilder builder, Offset<Request> offset) { builder.FinishSizePrefixed(offset.Value); }
        public RequestT UnPack()
        {
            var _o = new RequestT();
            this.UnPackTo(_o);
            return _o;
        }
        public void UnPackTo(RequestT _o)
        {
            _o.Id = this.Id;
            _o.Method = this.Method;
            _o.HandlerId = this.HandlerId;
            _o.Body = new BodyUnion();
            _o.Body.Type = this.BodyType;
            switch(this.BodyType)
            {
                default:
                    break;
                case FlatBuffers.Request.Body.Worker_UpdateSettingsRequest:
                    _o.Body.Value = this.Body<UpdateSettingsRequest>().HasValue ? this.Body<UpdateSettingsRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Worker_CreateWebRtcServerRequest:
                    _o.Body.Value = this.Body<CreateWebRtcServerRequest>().HasValue ? this.Body<CreateWebRtcServerRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Worker_CloseWebRtcServerRequest:
                    _o.Body.Value = this.Body<CloseWebRtcServerRequest>().HasValue ? this.Body<CloseWebRtcServerRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Worker_CreateRouterRequest:
                    _o.Body.Value = this.Body<CreateRouterRequest>().HasValue ? this.Body<CreateRouterRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Worker_CloseRouterRequest:
                    _o.Body.Value = this.Body<CloseRouterRequest>().HasValue ? this.Body<CloseRouterRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Router_CreateWebRtcTransportRequest:
                    _o.Body.Value = this.Body<CreateWebRtcTransportRequest>().HasValue ? this.Body<CreateWebRtcTransportRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Router_CreatePlainTransportRequest:
                    _o.Body.Value = this.Body<CreatePlainTransportRequest>().HasValue ? this.Body<CreatePlainTransportRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Router_CreatePipeTransportRequest:
                    _o.Body.Value = this.Body<CreatePipeTransportRequest>().HasValue ? this.Body<CreatePipeTransportRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Router_CreateDirectTransportRequest:
                    _o.Body.Value = this.Body<CreateDirectTransportRequest>().HasValue ? this.Body<CreateDirectTransportRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Router_CreateActiveSpeakerObserverRequest:
                    _o.Body.Value = this.Body<CreateActiveSpeakerObserverRequest>().HasValue ? this.Body<CreateActiveSpeakerObserverRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Router_CreateAudioLevelObserverRequest:
                    _o.Body.Value = this.Body<CreateAudioLevelObserverRequest>().HasValue ? this.Body<CreateAudioLevelObserverRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Router_CloseTransportRequest:
                    _o.Body.Value = this.Body<CloseTransportRequest>().HasValue ? this.Body<CloseTransportRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Router_CloseRtpObserverRequest:
                    _o.Body.Value = this.Body<CloseRtpObserverRequest>().HasValue ? this.Body<CloseRtpObserverRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Transport_SetMaxIncomingBitrateRequest:
                    _o.Body.Value = this.Body<SetMaxIncomingBitrateRequest>().HasValue ? this.Body<SetMaxIncomingBitrateRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Transport_SetMaxOutgoingBitrateRequest:
                    _o.Body.Value = this.Body<SetMaxOutgoingBitrateRequest>().HasValue ? this.Body<SetMaxOutgoingBitrateRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Transport_SetMinOutgoingBitrateRequest:
                    _o.Body.Value = this.Body<SetMinOutgoingBitrateRequest>().HasValue ? this.Body<SetMinOutgoingBitrateRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Transport_ProduceRequest:
                    _o.Body.Value = this.Body<ProduceRequest>().HasValue ? this.Body<ProduceRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Transport_ConsumeRequest:
                    _o.Body.Value = this.Body<ConsumeRequest>().HasValue ? this.Body<ConsumeRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Transport_ProduceDataRequest:
                    _o.Body.Value = this.Body<ProduceDataRequest>().HasValue ? this.Body<ProduceDataRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Transport_ConsumeDataRequest:
                    _o.Body.Value = this.Body<ConsumeDataRequest>().HasValue ? this.Body<ConsumeDataRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Transport_EnableTraceEventRequest:
                    _o.Body.Value = this.Body<EnableTraceEventRequest>().HasValue ? this.Body<EnableTraceEventRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Transport_CloseProducerRequest:
                    _o.Body.Value = this.Body<CloseProducerRequest>().HasValue ? this.Body<CloseProducerRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Transport_CloseConsumerRequest:
                    _o.Body.Value = this.Body<CloseConsumerRequest>().HasValue ? this.Body<CloseConsumerRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Transport_CloseDataProducerRequest:
                    _o.Body.Value = this.Body<CloseDataProducerRequest>().HasValue ? this.Body<CloseDataProducerRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Transport_CloseDataConsumerRequest:
                    _o.Body.Value = this.Body<CloseDataConsumerRequest>().HasValue ? this.Body<CloseDataConsumerRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.PlainTransport_ConnectRequest:
                    _o.Body.Value = this.Body<ConnectRequest>().HasValue ? this.Body<ConnectRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.PipeTransport_ConnectRequest:
                    _o.Body.Value = this.Body<PipeTransport.ConnectRequest>().HasValue ? this.Body<PipeTransport.ConnectRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.WebRtcTransport_ConnectRequest:
                    _o.Body.Value = this.Body<WebRtcTransport.ConnectRequest>().HasValue ? this.Body<WebRtcTransport.ConnectRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Producer_EnableTraceEventRequest:
                    _o.Body.Value = this.Body<Producer.EnableTraceEventRequest>().HasValue ? this.Body<Producer.EnableTraceEventRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Consumer_SetPreferredLayersRequest:
                    _o.Body.Value = this.Body<SetPreferredLayersRequest>().HasValue ? this.Body<SetPreferredLayersRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Consumer_SetPriorityRequest:
                    _o.Body.Value = this.Body<SetPriorityRequest>().HasValue ? this.Body<SetPriorityRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.Consumer_EnableTraceEventRequest:
                    _o.Body.Value = this.Body<Consumer.EnableTraceEventRequest>().HasValue ? this.Body<Consumer.EnableTraceEventRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.DataConsumer_SetBufferedAmountLowThresholdRequest:
                    _o.Body.Value = this.Body<SetBufferedAmountLowThresholdRequest>().HasValue ? this.Body<SetBufferedAmountLowThresholdRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.DataConsumer_SendRequest:
                    _o.Body.Value = this.Body<SendRequest>().HasValue ? this.Body<SendRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.DataConsumer_SetSubchannelsRequest:
                    _o.Body.Value = this.Body<SetSubchannelsRequest>().HasValue ? this.Body<SetSubchannelsRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.DataConsumer_AddSubchannelRequest:
                    _o.Body.Value = this.Body<AddSubchannelRequest>().HasValue ? this.Body<AddSubchannelRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.DataConsumer_RemoveSubchannelRequest:
                    _o.Body.Value = this.Body<RemoveSubchannelRequest>().HasValue ? this.Body<RemoveSubchannelRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.RtpObserver_AddProducerRequest:
                    _o.Body.Value = this.Body<AddProducerRequest>().HasValue ? this.Body<AddProducerRequest>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Request.Body.RtpObserver_RemoveProducerRequest:
                    _o.Body.Value = this.Body<RemoveProducerRequest>().HasValue ? this.Body<RemoveProducerRequest>().Value.UnPack() : null;
                    break;
            }
        }
        public static Offset<Request> Pack(FlatBufferBuilder builder, RequestT _o)
        {
            if(_o == null)
                return default(Offset<Request>);
            var _handler_id = _o.HandlerId == null ? default(StringOffset) : builder.CreateString(_o.HandlerId);
            var _body_type  = _o.Body      == null ? FlatBuffers.Request.Body.NONE : _o.Body.Type;
            var _body       = _o.Body      == null ? 0 : BodyUnion.Pack(builder, _o.Body);
            return CreateRequest(
              builder,
              _o.Id,
              _o.Method,
              _handler_id,
              _body_type,
              _body);
        }
    }

    public class RequestT
    {
        public uint Id { get; set; }

        public Method Method { get; set; }

        public string HandlerId { get; set; }

        public BodyUnion Body { get; set; }
    }
}
