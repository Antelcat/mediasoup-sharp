// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using System;
using Google.FlatBuffers;
using System.Text.Json.Serialization;
using FlatBuffers.Consumer;
using FlatBuffers.DataConsumer;
using FlatBuffers.PlainTransport;
using FlatBuffers.Transport;
using FlatBuffers.Worker;
using DumpResponse = FlatBuffers.Worker.DumpResponse;
using GetStatsResponse = FlatBuffers.PlainTransport.GetStatsResponse;

namespace FlatBuffers.Response
{
    public struct Response : IFlatbufferObject
    {
        private Table __p;
        public ByteBuffer ByteBuffer { get { return __p.bb; } }
        public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
        public static Response GetRootAsResponse(ByteBuffer _bb) { return GetRootAsResponse(_bb, new Response()); }
        public static Response GetRootAsResponse(ByteBuffer _bb, Response obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
        public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
        public Response __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

        public uint Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
        public bool Accepted { get { int o = __p.__offset(6); return o != 0 ? 0 != __p.bb.Get(o + __p.bb_pos) : (bool)false; } }
        public Body BodyType { get { int o = __p.__offset(8); return o != 0 ? (Body)__p.bb.Get(o + __p.bb_pos) : FlatBuffers.Response.Body.NONE; } }
        public TTable? Body<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(10); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
        public DumpResponse BodyAsWorker_DumpResponse() { return Body<DumpResponse>().Value; }
        public ResourceUsageResponse BodyAsWorker_ResourceUsageResponse() { return Body<ResourceUsageResponse>().Value; }
        public WebRtcServer.DumpResponse BodyAsWebRtcServer_DumpResponse() { return Body<WebRtcServer.DumpResponse>().Value; }
        public Router.DumpResponse BodyAsRouter_DumpResponse() { return Body<Router.DumpResponse>().Value; }
        public ProduceResponse BodyAsTransport_ProduceResponse() { return Body<ProduceResponse>().Value; }
        public ConsumeResponse BodyAsTransport_ConsumeResponse() { return Body<ConsumeResponse>().Value; }
        public RestartIceResponse BodyAsTransport_RestartIceResponse() { return Body<RestartIceResponse>().Value; }
        public ConnectResponse BodyAsPlainTransport_ConnectResponse() { return Body<ConnectResponse>().Value; }
        public PlainTransport.DumpResponse BodyAsPlainTransport_DumpResponse() { return Body<PlainTransport.DumpResponse>().Value; }
        public GetStatsResponse BodyAsPlainTransport_GetStatsResponse() { return Body<GetStatsResponse>().Value; }
        public PipeTransport.ConnectResponse BodyAsPipeTransport_ConnectResponse() { return Body<PipeTransport.ConnectResponse>().Value; }
        public PipeTransport.DumpResponse BodyAsPipeTransport_DumpResponse() { return Body<PipeTransport.DumpResponse>().Value; }
        public PipeTransport.GetStatsResponse BodyAsPipeTransport_GetStatsResponse() { return Body<PipeTransport.GetStatsResponse>().Value; }
        public DirectTransport.DumpResponse BodyAsDirectTransport_DumpResponse() { return Body<DirectTransport.DumpResponse>().Value; }
        public DirectTransport.GetStatsResponse BodyAsDirectTransport_GetStatsResponse() { return Body<DirectTransport.GetStatsResponse>().Value; }
        public WebRtcTransport.ConnectResponse BodyAsWebRtcTransport_ConnectResponse() { return Body<WebRtcTransport.ConnectResponse>().Value; }
        public WebRtcTransport.DumpResponse BodyAsWebRtcTransport_DumpResponse() { return Body<WebRtcTransport.DumpResponse>().Value; }
        public WebRtcTransport.GetStatsResponse BodyAsWebRtcTransport_GetStatsResponse() { return Body<WebRtcTransport.GetStatsResponse>().Value; }
        public Producer.DumpResponse BodyAsProducer_DumpResponse() { return Body<Producer.DumpResponse>().Value; }
        public Producer.GetStatsResponse BodyAsProducer_GetStatsResponse() { return Body<Producer.GetStatsResponse>().Value; }
        public Consumer.DumpResponse BodyAsConsumer_DumpResponse() { return Body<Consumer.DumpResponse>().Value; }
        public Consumer.GetStatsResponse BodyAsConsumer_GetStatsResponse() { return Body<Consumer.GetStatsResponse>().Value; }
        public SetPreferredLayersResponse BodyAsConsumer_SetPreferredLayersResponse() { return Body<SetPreferredLayersResponse>().Value; }
        public SetPriorityResponse BodyAsConsumer_SetPriorityResponse() { return Body<SetPriorityResponse>().Value; }
        public DataProducer.DumpResponse BodyAsDataProducer_DumpResponse() { return Body<DataProducer.DumpResponse>().Value; }
        public DataProducer.GetStatsResponse BodyAsDataProducer_GetStatsResponse() { return Body<DataProducer.GetStatsResponse>().Value; }
        public GetBufferedAmountResponse BodyAsDataConsumer_GetBufferedAmountResponse() { return Body<GetBufferedAmountResponse>().Value; }
        public DataConsumer.DumpResponse BodyAsDataConsumer_DumpResponse() { return Body<DataConsumer.DumpResponse>().Value; }
        public DataConsumer.GetStatsResponse BodyAsDataConsumer_GetStatsResponse() { return Body<DataConsumer.GetStatsResponse>().Value; }
        public SetSubchannelsResponse BodyAsDataConsumer_SetSubchannelsResponse() { return Body<SetSubchannelsResponse>().Value; }
        public AddSubchannelResponse BodyAsDataConsumer_AddSubchannelResponse() { return Body<AddSubchannelResponse>().Value; }
        public RemoveSubchannelResponse BodyAsDataConsumer_RemoveSubchannelResponse() { return Body<RemoveSubchannelResponse>().Value; }
        public string Error { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetErrorBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
        public ArraySegment<byte>? GetErrorBytes() { return __p.__vector_as_arraysegment(12); }
#endif
        public byte[] GetErrorArray() { return __p.__vector_as_array<byte>(12); }
        public string Reason { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetReasonBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
        public ArraySegment<byte>? GetReasonBytes() { return __p.__vector_as_arraysegment(14); }
#endif
        public byte[] GetReasonArray() { return __p.__vector_as_array<byte>(14); }

        public static Offset<Response> CreateResponse(FlatBufferBuilder builder,
                                                      uint id = 0,
                                                      bool accepted = false,
                                                      Body body_type = FlatBuffers.Response.Body.NONE,
                                                      int bodyOffset = 0,
                                                      StringOffset errorOffset = default(StringOffset),
                                                      StringOffset reasonOffset = default(StringOffset))
        {
            builder.StartTable(6);
            Response.AddReason(builder, reasonOffset);
            Response.AddError(builder, errorOffset);
            Response.AddBody(builder, bodyOffset);
            Response.AddId(builder, id);
            Response.AddBodyType(builder, body_type);
            Response.AddAccepted(builder, accepted);
            return Response.EndResponse(builder);
        }

        public static void StartResponse(FlatBufferBuilder builder) { builder.StartTable(6); }
        public static void AddId(FlatBufferBuilder builder, uint id) { builder.AddUint(0, id, 0); }
        public static void AddAccepted(FlatBufferBuilder builder, bool accepted) { builder.AddBool(1, accepted, false); }
        public static void AddBodyType(FlatBufferBuilder builder, Body bodyType) { builder.AddByte(2, (byte)bodyType, 0); }
        public static void AddBody(FlatBufferBuilder builder, int bodyOffset) { builder.AddOffset(3, bodyOffset, 0); }
        public static void AddError(FlatBufferBuilder builder, StringOffset errorOffset) { builder.AddOffset(4, errorOffset.Value, 0); }
        public static void AddReason(FlatBufferBuilder builder, StringOffset reasonOffset) { builder.AddOffset(5, reasonOffset.Value, 0); }
        public static Offset<Response> EndResponse(FlatBufferBuilder builder)
        {
            int o = builder.EndTable();
            return new Offset<Response>(o);
        }
        public ResponseT UnPack()
        {
            var _o = new ResponseT();
            this.UnPackTo(_o);
            return _o;
        }
        public void UnPackTo(ResponseT _o)
        {
            _o.Id = this.Id;
            _o.Accepted = this.Accepted;
            _o.Body = new BodyUnion();
            _o.Body.Type = this.BodyType;
            switch(this.BodyType)
            {
                default:
                    break;
                case FlatBuffers.Response.Body.Worker_DumpResponse:
                    _o.Body.Value = this.Body<DumpResponse>().HasValue ? this.Body<DumpResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.Worker_ResourceUsageResponse:
                    _o.Body.Value = this.Body<ResourceUsageResponse>().HasValue ? this.Body<ResourceUsageResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.WebRtcServer_DumpResponse:
                    _o.Body.Value = this.Body<WebRtcServer.DumpResponse>().HasValue ? this.Body<WebRtcServer.DumpResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.Router_DumpResponse:
                    _o.Body.Value = this.Body<Router.DumpResponse>().HasValue ? this.Body<Router.DumpResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.Transport_ProduceResponse:
                    _o.Body.Value = this.Body<ProduceResponse>().HasValue ? this.Body<ProduceResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.Transport_ConsumeResponse:
                    _o.Body.Value = this.Body<ConsumeResponse>().HasValue ? this.Body<ConsumeResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.Transport_RestartIceResponse:
                    _o.Body.Value = this.Body<RestartIceResponse>().HasValue ? this.Body<RestartIceResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.PlainTransport_ConnectResponse:
                    _o.Body.Value = this.Body<ConnectResponse>().HasValue ? this.Body<ConnectResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.PlainTransport_DumpResponse:
                    _o.Body.Value = this.Body<PlainTransport.DumpResponse>().HasValue ? this.Body<PlainTransport.DumpResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.PlainTransport_GetStatsResponse:
                    _o.Body.Value = this.Body<GetStatsResponse>().HasValue ? this.Body<GetStatsResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.PipeTransport_ConnectResponse:
                    _o.Body.Value = this.Body<PipeTransport.ConnectResponse>().HasValue ? this.Body<PipeTransport.ConnectResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.PipeTransport_DumpResponse:
                    _o.Body.Value = this.Body<PipeTransport.DumpResponse>().HasValue ? this.Body<PipeTransport.DumpResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.PipeTransport_GetStatsResponse:
                    _o.Body.Value = this.Body<PipeTransport.GetStatsResponse>().HasValue ? this.Body<PipeTransport.GetStatsResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.DirectTransport_DumpResponse:
                    _o.Body.Value = this.Body<DirectTransport.DumpResponse>().HasValue ? this.Body<DirectTransport.DumpResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.DirectTransport_GetStatsResponse:
                    _o.Body.Value = this.Body<DirectTransport.GetStatsResponse>().HasValue ? this.Body<DirectTransport.GetStatsResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.WebRtcTransport_ConnectResponse:
                    _o.Body.Value = this.Body<WebRtcTransport.ConnectResponse>().HasValue ? this.Body<WebRtcTransport.ConnectResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.WebRtcTransport_DumpResponse:
                    _o.Body.Value = this.Body<WebRtcTransport.DumpResponse>().HasValue ? this.Body<WebRtcTransport.DumpResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.WebRtcTransport_GetStatsResponse:
                    _o.Body.Value = this.Body<WebRtcTransport.GetStatsResponse>().HasValue ? this.Body<WebRtcTransport.GetStatsResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.Producer_DumpResponse:
                    _o.Body.Value = this.Body<Producer.DumpResponse>().HasValue ? this.Body<Producer.DumpResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.Producer_GetStatsResponse:
                    _o.Body.Value = this.Body<Producer.GetStatsResponse>().HasValue ? this.Body<Producer.GetStatsResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.Consumer_DumpResponse:
                    _o.Body.Value = this.Body<Consumer.DumpResponse>().HasValue ? this.Body<Consumer.DumpResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.Consumer_GetStatsResponse:
                    _o.Body.Value = this.Body<Consumer.GetStatsResponse>().HasValue ? this.Body<Consumer.GetStatsResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.Consumer_SetPreferredLayersResponse:
                    _o.Body.Value = this.Body<SetPreferredLayersResponse>().HasValue ? this.Body<SetPreferredLayersResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.Consumer_SetPriorityResponse:
                    _o.Body.Value = this.Body<SetPriorityResponse>().HasValue ? this.Body<SetPriorityResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.DataProducer_DumpResponse:
                    _o.Body.Value = this.Body<DataProducer.DumpResponse>().HasValue ? this.Body<DataProducer.DumpResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.DataProducer_GetStatsResponse:
                    _o.Body.Value = this.Body<DataProducer.GetStatsResponse>().HasValue ? this.Body<DataProducer.GetStatsResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.DataConsumer_GetBufferedAmountResponse:
                    _o.Body.Value = this.Body<GetBufferedAmountResponse>().HasValue ? this.Body<GetBufferedAmountResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.DataConsumer_DumpResponse:
                    _o.Body.Value = this.Body<DataConsumer.DumpResponse>().HasValue ? this.Body<DataConsumer.DumpResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.DataConsumer_GetStatsResponse:
                    _o.Body.Value = this.Body<DataConsumer.GetStatsResponse>().HasValue ? this.Body<DataConsumer.GetStatsResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.DataConsumer_SetSubchannelsResponse:
                    _o.Body.Value = this.Body<SetSubchannelsResponse>().HasValue ? this.Body<SetSubchannelsResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.DataConsumer_AddSubchannelResponse:
                    _o.Body.Value = this.Body<AddSubchannelResponse>().HasValue ? this.Body<AddSubchannelResponse>().Value.UnPack() : null;
                    break;
                case FlatBuffers.Response.Body.DataConsumer_RemoveSubchannelResponse:
                    _o.Body.Value = this.Body<RemoveSubchannelResponse>().HasValue ? this.Body<RemoveSubchannelResponse>().Value.UnPack() : null;
                    break;
            }
            _o.Error = this.Error;
            _o.Reason = this.Reason;
        }
        public static Offset<Response> Pack(FlatBufferBuilder builder, ResponseT _o)
        {
            if(_o == null)
                return default(Offset<Response>);
            var _body_type = _o.Body   == null ? FlatBuffers.Response.Body.NONE : _o.Body.Type;
            var _body      = _o.Body   == null ? 0 : BodyUnion.Pack(builder, _o.Body);
            var _error     = _o.Error  == null ? default(StringOffset) : builder.CreateString(_o.Error);
            var _reason    = _o.Reason == null ? default(StringOffset) : builder.CreateString(_o.Reason);
            return CreateResponse(
              builder,
              _o.Id,
              _o.Accepted,
              _body_type,
              _body,
              _error,
              _reason);
        }
    }

    public class ResponseT
    {
        public uint Id { get; set; }

        public bool Accepted { get; set; }

        public BodyUnion Body { get; set; }

        public string Error { get; set; }

        public string Reason { get; set; }

        public ResponseT()
        {
            this.Id = 0;
            this.Accepted = false;
            this.Body = null;
            this.Error = null;
            this.Reason = null;
        }
    }
}
