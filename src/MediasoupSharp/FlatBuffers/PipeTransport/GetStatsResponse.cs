// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using Google.FlatBuffers;
using System.Text.Json.Serialization;
using FlatBuffers.Transport;
using MediasoupSharp.FlatBuffers.PipeTransport.T;
using Tuple = FlatBuffers.Transport.Tuple;

namespace FlatBuffers.PipeTransport
{
    public struct GetStatsResponse : IFlatbufferObject
    {
        private Table __p;
        public ByteBuffer ByteBuffer { get { return __p.bb; } }
        public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
        public static GetStatsResponse GetRootAsGetStatsResponse(ByteBuffer _bb) { return GetRootAsGetStatsResponse(_bb, new GetStatsResponse()); }
        public static GetStatsResponse GetRootAsGetStatsResponse(ByteBuffer _bb, GetStatsResponse obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
        public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
        public GetStatsResponse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

        public Stats? Base { get { int o = __p.__offset(4); return o != 0 ? (Stats?)(new Stats()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
        public Tuple? Tuple { get { int o = __p.__offset(6); return o != 0 ? (Tuple?)(new Tuple()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

        public static Offset<GetStatsResponse> CreateGetStatsResponse(FlatBufferBuilder builder,
                                                                      Offset<Stats> @baseOffset = default(Offset<Stats>),
                                                                      Offset<Tuple> tupleOffset = default(Offset<Tuple>))
        {
            builder.StartTable(2);
            GetStatsResponse.AddTuple(builder, tupleOffset);
            GetStatsResponse.AddBase(builder, @baseOffset);
            return GetStatsResponse.EndGetStatsResponse(builder);
        }

        public static void StartGetStatsResponse(FlatBufferBuilder builder) { builder.StartTable(2); }
        public static void AddBase(FlatBufferBuilder builder, Offset<Stats> baseOffset) { builder.AddOffset(0, baseOffset.Value, 0); }
        public static void AddTuple(FlatBufferBuilder builder, Offset<Tuple> tupleOffset) { builder.AddOffset(1, tupleOffset.Value, 0); }
        public static Offset<GetStatsResponse> EndGetStatsResponse(FlatBufferBuilder builder)
        {
            int o = builder.EndTable();
            builder.Required(o, 4);  // base
            builder.Required(o, 6);  // tuple
            return new Offset<GetStatsResponse>(o);
        }
        public GetStatsResponseT UnPack()
        {
            var _o = new GetStatsResponseT();
            this.UnPackTo(_o);
            return _o;
        }
        public void UnPackTo(GetStatsResponseT _o)
        {
            _o.Base = this.Base.HasValue ? this.Base.Value.UnPack() : null;
            _o.Tuple = this.Tuple.HasValue ? this.Tuple.Value.UnPack() : null;
        }
        public static Offset<GetStatsResponse> Pack(FlatBufferBuilder builder, GetStatsResponseT _o)
        {
            if(_o == null)
                return default(Offset<GetStatsResponse>);
            var _base = _o.Base == null ? default(Offset<Stats>) : Stats.Pack(builder, _o.Base);
            var _tuple = _o.Tuple == null ? default(Offset<Tuple>) : Transport.Tuple.Pack(builder, _o.Tuple);
            return CreateGetStatsResponse(
              builder,
              _base,
              _tuple);
        }
    }
}
