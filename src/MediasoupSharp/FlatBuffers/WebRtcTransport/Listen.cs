// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using MediasoupSharp.FlatBuffers.WebRtcTransport.T;

namespace FlatBuffers.WebRtcTransport
{
    public enum Listen : byte
    {
        NONE = 0,

        ListenIndividual = 1,

        ListenServer = 2,
    }

    public class ListenUnion
    {
        public Listen Type { get; set; }
        public object Value { get; set; }

        public ListenUnion()
        {
            this.Type = Listen.NONE;
            this.Value = null;
        }

        public T As<T>() where T : class { return this.Value as T; }
        public ListenIndividualT AsListenIndividual() { return this.As<ListenIndividualT>(); }
        public static ListenUnion FromListenIndividual(ListenIndividualT _listenindividual) { return new ListenUnion { Type = Listen.ListenIndividual, Value = _listenindividual }; }
        public ListenServerT AsListenServer() { return this.As<ListenServerT>(); }
        public static ListenUnion FromListenServer(ListenServerT _listenserver) { return new ListenUnion { Type = Listen.ListenServer, Value = _listenserver }; }

        public static int Pack(Google.FlatBuffers.FlatBufferBuilder builder, ListenUnion _o)
        {
            switch(_o.Type)
            {
                default:
                    return 0;
                case Listen.ListenIndividual:
                    return ListenIndividual.Pack(builder, _o.AsListenIndividual()).Value;
                case Listen.ListenServer:
                    return ListenServer.Pack(builder, _o.AsListenServer()).Value;
            }
        }
    }
}
