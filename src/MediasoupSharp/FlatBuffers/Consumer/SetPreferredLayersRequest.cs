// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using System.Text.Json.Serialization;
using Google.FlatBuffers;
using MediasoupSharp.FlatBuffers.Consumer.T;

namespace FlatBuffers.Consumer
{
    public struct SetPreferredLayersRequest : IFlatbufferObject
    {
        private Table __p;
        public ByteBuffer ByteBuffer { get { return __p.bb; } }
        public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
        public static SetPreferredLayersRequest GetRootAsSetPreferredLayersRequest(ByteBuffer _bb) { return GetRootAsSetPreferredLayersRequest(_bb, new SetPreferredLayersRequest()); }
        public static SetPreferredLayersRequest GetRootAsSetPreferredLayersRequest(ByteBuffer _bb, SetPreferredLayersRequest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
        public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
        public SetPreferredLayersRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

        public ConsumerLayers? PreferredLayers { get { int o = __p.__offset(4); return o != 0 ? (ConsumerLayers?)(new ConsumerLayers()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

        public static Offset<SetPreferredLayersRequest> CreateSetPreferredLayersRequest(FlatBufferBuilder builder,
                                                                                        Offset<ConsumerLayers> preferred_layersOffset = default(Offset<ConsumerLayers>))
        {
            builder.StartTable(1);
            SetPreferredLayersRequest.AddPreferredLayers(builder, preferred_layersOffset);
            return SetPreferredLayersRequest.EndSetPreferredLayersRequest(builder);
        }

        public static void StartSetPreferredLayersRequest(FlatBufferBuilder builder) { builder.StartTable(1); }
        public static void AddPreferredLayers(FlatBufferBuilder builder, Offset<ConsumerLayers> preferredLayersOffset) { builder.AddOffset(0, preferredLayersOffset.Value, 0); }
        public static Offset<SetPreferredLayersRequest> EndSetPreferredLayersRequest(FlatBufferBuilder builder)
        {
            int o = builder.EndTable();
            builder.Required(o, 4);  // preferred_layers
            return new Offset<SetPreferredLayersRequest>(o);
        }
        public SetPreferredLayersRequestT UnPack()
        {
            var _o = new SetPreferredLayersRequestT();
            this.UnPackTo(_o);
            return _o;
        }
        public void UnPackTo(SetPreferredLayersRequestT _o)
        {
            _o.PreferredLayers = this.PreferredLayers.HasValue ? this.PreferredLayers.Value.UnPack() : null;
        }
        public static Offset<SetPreferredLayersRequest> Pack(FlatBufferBuilder builder, SetPreferredLayersRequestT _o)
        {
            if(_o == null)
                return default(Offset<SetPreferredLayersRequest>);
            var _preferred_layers = _o.PreferredLayers == null ? default(Offset<ConsumerLayers>) : ConsumerLayers.Pack(builder, _o.PreferredLayers);
            return CreateSetPreferredLayersRequest(
              builder,
              _preferred_layers);
        }
    }
}
